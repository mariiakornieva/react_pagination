{"version":3,"sources":["components/Pagination/Pagination.jsx","App.js","index.js"],"names":["perPageOptions","Pagination","page","perPage","total","onPageChange","onPerPageChange","onTotalChange","withInfo","pageCount","useMemo","Math","ceil","pageInfo","from","to","isFirstPage","useCallback","isLastPage","window","Array","keys","map","key","first","last","className","cn","disabled","href","aria-label","aria-disabled","onClick","tabIndex","aria-hidden","includes","data-testid","FIRST_PAGE","isLeftPlaceholderVisible","pageNumber","idx","active","isRightPlaceholderVisible","htmlFor","type","id","name","value","min","max","onChange","e","target","option","defaultProps","App","useState","setTotal","setPerPage","setPage","updatePage","newTotal","newPerPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3467fe83.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport './Pagination.css';\n\nconst perPageOptions = [3, 5, 10, 15, 20];\n\nconst MIN_TOTAL = 1;\nconst MAX_TOTAL = 100;\nconst FIRST_PAGE = 1;\nconst WINDOW_SIZE = 2;\n\nexport const Pagination = ({\n  page, perPage, total,\n  onPageChange, onPerPageChange, onTotalChange,\n  withInfo,\n}) => {\n  const pageCount = useMemo(() => Math.ceil(total / perPage), [total, perPage]);\n\n  const pageInfo = useMemo(() => ({\n    from: (perPage * page) - perPage + 1,\n    to: (page === pageCount) ? total : (perPage * page),\n  }), [page, perPage, pageCount, total]);\n\n  const nextPage = () => onPageChange(page + 1);\n  const prevPage = () => onPageChange(page - 1);\n\n  const isFirstPage = useCallback(() => page === FIRST_PAGE, [page]);\n  const isLastPage = useCallback(() => page === pageCount, [page, pageCount]);\n\n  const isLeftPlaceholderVisible = window => (\n    !window.includes(FIRST_PAGE) && !window.includes(FIRST_PAGE + 1)\n  );\n  const isRightPlaceholderVisible = window => (\n    !window.includes(pageCount) && !window.includes(pageCount - 1)\n  );\n\n  const window = useMemo(() => {\n    if (pageCount <= WINDOW_SIZE) {\n      return [...Array(pageCount).keys()].map(key => key + 1);\n    }\n\n    let first;\n    let last;\n\n    if (isLastPage()) {\n      first = page - WINDOW_SIZE > 0 ? page - WINDOW_SIZE : 1;\n      last = page;\n    } else {\n      first = page - 1 > 0 ? page - 1 : page;\n      last = first + WINDOW_SIZE <= pageCount ? first + WINDOW_SIZE : pageCount;\n    }\n\n    if (last - first > 1) {\n      return [\n        first,\n        first + 1,\n        last,\n      ];\n    }\n\n    return [first, last];\n  }, [page, pageCount]);\n\n  return (\n    <nav className=\"Page navigation\">\n      <ul className=\"pagination pagination-lg justify-content-center\">\n        <li\n          className={cn('page-item', {\n            disabled: isFirstPage(),\n          })}\n        >\n          <a\n            className=\"page-link\"\n            href=\"#\"\n            aria-label=\"Previous\"\n            aria-disabled={isFirstPage() ? 'true' : 'false'}\n            onClick={prevPage}\n            tabIndex={isFirstPage() ? -1 : 0}\n          >\n            <span aria-hidden=\"true\">&laquo;</span>\n          </a>\n        </li>\n\n        {/* Render first page */}\n        {window.includes(FIRST_PAGE) || (\n          <li\n            className=\"page-item\"\n          >\n            <a\n              className=\"page-link\"\n              href=\"#\"\n              onClick={() => onPageChange(FIRST_PAGE)}\n              data-testid={FIRST_PAGE}\n            >\n              1\n            </a>\n          </li>\n        )}\n\n        {/* Render placeholder */}\n        {isLeftPlaceholderVisible(window) && (\n          <li\n            className=\"page-item\"\n          >\n            <a\n              className=\"page-link\"\n              href=\"#\"\n            >\n              ...\n            </a>\n          </li>\n        )}\n\n        {window.map((pageNumber, idx) => (\n          <li\n            key={pageNumber}\n            className={cn('page-item', {\n              active: page === pageNumber,\n            })}\n          >\n            <a\n              className=\"page-link\"\n              href=\"#\"\n              onClick={() => onPageChange(pageNumber)}\n              data-testid={pageNumber}\n            >\n              {pageNumber}\n            </a>\n          </li>\n        ))}\n\n        {/* Render placeholder */}\n        {isRightPlaceholderVisible(window) && (\n          <li\n            className=\"page-item\"\n          >\n            <a\n              className=\"page-link\"\n              href=\"#\"\n            >\n              ...\n            </a>\n          </li>\n        )}\n\n        {/* Render last page */}\n        {window.includes(pageCount) || (\n          <li\n            className=\"page-item\"\n          >\n            <a\n              className=\"page-link\"\n              href=\"#\"\n              onClick={() => onPageChange(pageCount)}\n              data-testid={pageCount}\n            >\n              {pageCount}\n            </a>\n          </li>\n        )}\n\n        <li\n          className={cn('page-item', {\n            disabled: isLastPage(),\n          })}\n        >\n          <a\n            className=\"page-link\"\n            href=\"#\"\n            aria-label=\"Next\"\n            aria-disabled={isLastPage() ? 'true' : 'false'}\n            onClick={nextPage}\n            tabIndex={isLastPage() ? -1 : 0}\n          >\n            <span aria-hidden=\"true\">&raquo;</span>\n          </a>\n        </li>\n      </ul>\n\n      {withInfo && (\n        <p className=\"Pagination__info\">\n          {`${pageInfo.from} - ${pageInfo.to} of ${total}`}\n        </p>\n      )}\n\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-3\">\n            <label htmlFor=\"total\">Total items:</label>\n            <input\n              type=\"number\"\n              id=\"total\"\n              name=\"total\"\n              value={total}\n              className=\"form-control\"\n              min={MIN_TOTAL}\n              max={MAX_TOTAL}\n              onChange={e => onTotalChange(+e.target.value)}\n            />\n          </div>\n\n          <div className=\"col-3\">\n            <label htmlFor=\"perPage\">Items per page:</label>\n            <select\n              name=\"perPage\"\n              id=\"perPage\"\n              value={perPage}\n              onChange={e => onPerPageChange(+e.target.value)}\n              className=\"form-select\"\n            >\n              {perPageOptions.map(option => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  page: PropTypes.number,\n  perPage: PropTypes.number,\n  total: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  onPerPageChange: PropTypes.func.isRequired,\n  onTotalChange: PropTypes.func.isRequired,\n  withInfo: PropTypes.bool,\n};\n\nPagination.defaultProps = {\n  page: 1,\n  perPage: 5,\n  withInfo: false,\n};\n","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nconst App = () => {\n  const [total, setTotal] = useState(42);\n  const [perPage, setPerPage] = useState(5);\n  const [page, setPage] = useState(1);\n\n  const updatePage = (newTotal, newPerPage) => {\n    const pageCount = Math.ceil(newTotal / newPerPage);\n\n    setPage(page > pageCount ? pageCount : page);\n  };\n\n  const handlePerPageChange = (newPerPage) => {\n    setPerPage(newPerPage);\n    updatePage(total, newPerPage);\n  };\n\n  const handleTotalChange = (newTotal) => {\n    setTotal(newTotal);\n    updatePage(newTotal, perPage);\n  };\n\n  return (\n    <div className=\"App container\">\n      <Pagination\n        total={total}\n        onTotalChange={handleTotalChange}\n        perPage={perPage}\n        onPerPageChange={handlePerPageChange}\n        page={page}\n        onPageChange={setPage}\n        withInfo\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}