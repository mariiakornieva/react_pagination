{"version":3,"sources":["components/Pagination/Pagination.jsx","App.js","index.js"],"names":["perPageOptions","Pagination","page","perPage","total","onPageChange","onPerPageChange","onTotalChange","withInfo","pageCount","useMemo","Math","ceil","pageInfo","from","to","isFirstPage","isLastPage","window","Array","keys","map","key","first","last","max","min","result","includes","FIRST_PAGE","unshift","push","className","cn","disabled","href","aria-label","aria-disabled","onClick","tabIndex","aria-hidden","pageNumber","idx","uuid","active","data-testid","htmlFor","type","id","name","value","onChange","e","target","option","defaultProps","App","useState","setTotal","setPerPage","setPage","updatePage","newTotal","newPerPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5129c1c6.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport uuid from 'react-uuid';\n\nimport './Pagination.css';\n\nconst perPageOptions = [3, 5, 10, 15, 20];\n\nconst MIN_TOTAL = 1;\nconst MAX_TOTAL = 100;\nconst FIRST_PAGE = 1;\nconst WINDOW_SIZE = 2;\n\nexport const Pagination = ({\n  page, perPage, total,\n  onPageChange, onPerPageChange, onTotalChange,\n  withInfo,\n}) => {\n  const pageCount = useMemo(() => Math.ceil(total / perPage), [total, perPage]);\n\n  const pageInfo = useMemo(() => ({\n    from: (perPage * page) - perPage + 1,\n    to: (page === pageCount) ? total : (perPage * page),\n  }), [page, perPage, pageCount, total]);\n\n  const nextPage = () => onPageChange(page + 1);\n  const prevPage = () => onPageChange(page - 1);\n\n  const isFirstPage = useMemo(() => page === FIRST_PAGE, [page]);\n  const isLastPage = useMemo(() => page === pageCount, [page, pageCount]);\n\n  const window = useMemo(() => {\n    if (pageCount <= WINDOW_SIZE) {\n      return [...Array(pageCount).keys()].map(key => key + 1);\n    }\n\n    let first;\n    let last;\n\n    if (isLastPage) {\n      first = Math.max(page - WINDOW_SIZE, 1);\n      last = page;\n    } else {\n      first = page - 1 > 0 ? page - 1 : page;\n      last = Math.min(first + WINDOW_SIZE, pageCount);\n    }\n\n    if (last - first > 1) {\n      const result = [first, first + 1, last];\n\n      if (first !== FIRST_PAGE) {\n        if (!result.includes(FIRST_PAGE + 1)) {\n          result.unshift('...');\n        }\n\n        result.unshift(FIRST_PAGE);\n      }\n\n      if (last !== pageCount) {\n        if (!result.includes(pageCount - 1)) {\n          result.push('...');\n        }\n\n        result.push(pageCount);\n      }\n\n      return result;\n    }\n\n    return [first, last];\n  }, [page, pageCount]);\n\n  return (\n    <nav className=\"Page navigation\">\n      <ul className=\"pagination pagination-lg justify-content-center\">\n        <li\n          className={cn('page-item', {\n            disabled: isFirstPage,\n          })}\n        >\n          <a\n            className=\"page-link\"\n            href=\"#\"\n            aria-label=\"Previous\"\n            aria-disabled={isFirstPage ? 'true' : 'false'}\n            onClick={prevPage}\n            tabIndex={isFirstPage ? -1 : 0}\n          >\n            <span aria-hidden=\"true\">&laquo;</span>\n          </a>\n        </li>\n\n        {window.map((pageNumber, idx) => (\n          <li\n            key={uuid()}\n            className={cn('page-item', {\n              active: page === pageNumber,\n            })}\n          >\n            <a\n              className=\"page-link\"\n              href=\"#\"\n              onClick={() => {\n                if (pageNumber !== '...') {\n                  onPageChange(pageNumber);\n                }\n              }}\n              data-testid={pageNumber}\n            >\n              {pageNumber}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={cn('page-item', {\n            disabled: isLastPage,\n          })}\n        >\n          <a\n            className=\"page-link\"\n            href=\"#\"\n            aria-label=\"Next\"\n            aria-disabled={isLastPage ? 'true' : 'false'}\n            onClick={nextPage}\n            tabIndex={isLastPage ? -1 : 0}\n          >\n            <span aria-hidden=\"true\">&raquo;</span>\n          </a>\n        </li>\n      </ul>\n\n      {withInfo && (\n        <p className=\"Pagination__info\">\n          {`${pageInfo.from} - ${pageInfo.to} of ${total}`}\n        </p>\n      )}\n\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-3\">\n            <label htmlFor=\"total\">Total items:</label>\n            <input\n              type=\"number\"\n              id=\"total\"\n              name=\"total\"\n              value={total}\n              className=\"form-control\"\n              min={MIN_TOTAL}\n              max={MAX_TOTAL}\n              onChange={e => onTotalChange(+e.target.value)}\n            />\n          </div>\n\n          <div className=\"col-3\">\n            <label htmlFor=\"perPage\">Items per page:</label>\n            <select\n              name=\"perPage\"\n              id=\"perPage\"\n              value={perPage}\n              onChange={e => onPerPageChange(+e.target.value)}\n              className=\"form-select\"\n            >\n              {perPageOptions.map(option => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  page: PropTypes.number,\n  perPage: PropTypes.number,\n  total: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  onPerPageChange: PropTypes.func.isRequired,\n  onTotalChange: PropTypes.func.isRequired,\n  withInfo: PropTypes.bool,\n};\n\nPagination.defaultProps = {\n  page: 1,\n  perPage: 5,\n  withInfo: false,\n};\n","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nconst App = () => {\n  const [total, setTotal] = useState(42);\n  const [perPage, setPerPage] = useState(5);\n  const [page, setPage] = useState(1);\n\n  const updatePage = (newTotal, newPerPage) => {\n    const pageCount = Math.ceil(newTotal / newPerPage);\n\n    setPage(page > pageCount ? pageCount : page);\n  };\n\n  const handlePerPageChange = (newPerPage) => {\n    setPerPage(newPerPage);\n    updatePage(total, newPerPage);\n  };\n\n  const handleTotalChange = (newTotal) => {\n    setTotal(newTotal);\n    updatePage(newTotal, perPage);\n  };\n\n  return (\n    <div className=\"App container\">\n      <Pagination\n        total={total}\n        onTotalChange={handleTotalChange}\n        perPage={perPage}\n        onPerPageChange={handlePerPageChange}\n        page={page}\n        onPageChange={setPage}\n        withInfo\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}